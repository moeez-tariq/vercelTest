<head>
    <style>
        .list-group {
            margin-top: 20px;
            padding: 30px;
            background-color: aliceblue;
            border-radius: 10px;
            width: 70%;
        }
        .list-item {
            background-color: #f9f9f9;
            border: 1px solid #ccc;
            padding: 10px;
            
            font-family:'Times New Roman', Times, serif;
        }
        .list-item:hover {
            background-color: #f0f0f0;
        }
        .goal-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            font-size: 20px;
            text-ita
        }

        .goal-content {
            flex-grow: 1;
            padding: 10px; 
            font-family: "Times New Roman", Times, serif;" 
        }

        .goal-content:hover {
            background-color: #f0f0f0;
        }

        .delete-btn {
            background: none;
            border: none;
            cursor: pointer;
        }

        .delete-btn i {
            color: rgb(39, 1, 1);
        }

        .delete-btn:hover i {
            color: rgb(240, 11, 11);
        }

        .completed {
        text-decoration: line-through; /* Add strikethrough effect */
        color: #888; /* Change color to gray for completed goals */
        }
        body{
            background-color: rgb(226, 246, 247);
            background-image: linear-gradient(180deg, rgb(230, 249, 249) 0%, rgb(255, 255, 255) 100%);

        }

        #eventChart{
            margin: 0 auto;
            height: 400px;
            width: 400px;
            background-color: rgb(5, 5, 5);
        }

    </style>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar2">
    <div class="container">
        <a class="navbar-brand click-scroll" href="/">
            <i class="bi-gender-ambiguous"></i>
            <span>Soundscape Stories</span>
        </a>

        <div class="d-lg-none ms-auto me-4">
            <a href="#top" class="navbar-icon bi-person smoothscroll"></a>
        </div>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-lg-5 me-lg-auto">
                <li class="nav-item">
                    <a class="nav-link inactive" href="/">Home</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link click-scroll" href="articles">Articles</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="community">Community</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="faq">Mood Tunes</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="diary">Dear Diary</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link active" href="goals">Goals</a>
                </li>

                {{!-- <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarLightDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">Pages</a>

                    <ul class="dropdown-menu dropdown-menu-light" aria-labelledby="navbarLightDropdownMenuLink">
                        <li><a class="dropdown-item" href="topics-listing.html">Topics Listing</a></li>

                        <li><a class="dropdown-item" href="contact.html">Contact Form</a></li>
                    </ul>
                </li> --}}
            </ul>

            {{!-- <div class="d-none d-lg-block">
                <a href="#top" class="navbar-icon bi-person smoothscroll"></a>
            </div> --}}
            <div class="d-none d-lg-block">
                <ul class="navbar-nav ms-lg-5 me-lg-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/logout">Sign Out</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</nav>
<main>
    <section class="goals-section section-padding" id="section_goals">
        <div class="container" style="border:grey solid 2px; background-color:#80d0c7;box-shadow: 5px 5px 5px lightgrey; padding:25px">
            <div class="row">


                <div class="text-center">
                <h2 class="mb-4">Track My Goals</h1>
                <a href="/goals" class="btn custom-btn custom-btn2 mt-3 mt-lg-4" style="width:300px">Back to today's goals>> </a>
                </div>


                <div class="clearfix">
                    <br>
                    <br>
                    <br>
                </div>
                <div class="col-lg-5 col-12">
                    <div class="content-container text-center" style="width:100%">
                        <h4>Number of Goals Completed per Day</h4>
                        <canvas id="goalChart" width="200" height="200"></canvas>
                    </div>
                </div>

                <div class="col-lg-6 col-12 m-auto">
                    <!-- Checklist for goals -->
                    <div class="mt-4">
                        
                        <div class="list-group" id="goalList" style="box-shadow: 5px 5px 5px lightgrey; min-width:600px; text-align:right">
                            <h4 style="font-family:cursive">All My Goals</h4>
                             {{#each allGoals}}
                                    <!-- HTML code for the goal item with checkbox -->
                                <div class="goal-item" data-goal-id="{{this._id}}">
                                    <input type="checkbox" {{#if this.completed}}checked{{/if}} onchange="updateGoalStatus('{{this._id}}')">
                                    <span class="goal-content {{#if this.completed}}completed{{/if}}">{{this.content}}</span>

                                    <form method="POST" action="/goals/deleteGoal/{{this._id}}">
                                            <button class="delete-btn" type="submit">
                                            <i class="bi bi-trash"></i></button>
                                    </form>
                                </div>
                            {{/each}} 
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>
<footer class="site-footer section-padding">
    <div class="container">
        <div class="row">

        </div>
    </div>
</footer>

<script>
// JavaScript code to handle checkbox change event
function updateGoalStatus(goalId) {
    // Update UI
    const goalItem = $(`.goal-item[data-goal-id="${goalId}"]`);
    const goalContent = goalItem.find('.goal-content');
    const isChecked = goalItem.find('input').prop('checked');
    if (isChecked) {
        goalContent.addClass('completed');
    } else {
        goalContent.removeClass('completed');
    }

    // Update database
    $.ajax({
        url: '/updateGoalStatus',
        method: 'POST',
        data: { goalId: goalId},
        success: function(response) {
            if (response.success) {
                if (response.completed) {
                    goalContent.addClass('completed');
                } else {
                    goalContent.removeClass('completed');
                }
            } else {
                console.error('Error updating goal status:', response.error);
            }
        },
        error: function(xhr, status, error) {
            console.error('Error updating goal status:', error);
        }
    });
}
a
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
    // Function to get the date string for the past n days
    /*
    function getPastDates(n) {
        const dates = [];
        for (let i = n - 1; i >= 0; i--) {
            const date = new Date();
            date.setDate(date.getDate() - i);
            dates.push(date.toLocaleDateString('en-US'));
        }
        return dates;
    }

    // Assuming you have retrieved the goals completed for the past 30 days
    let goalsCompleted = [];
    //console.log("goals", goals);

    {{#each allGoals}}
        {{#if this.completed}}
        goalsCompleted.push({
            date: '{{this.date}}'
        });
        {{/if}}
    {{/each}}


    console.log("goals completed", goalsCompleted);
    // Organize the data to count the number of goals completed for each day
    const goalCounts = {};
    goalsCompleted.forEach(goal => {
        const date = new Date(goal.date).toLocaleDateString('en-US');
        goalCounts[date] = (goalCounts[date] || 0) + 1;
    });
    
    // Get the past 30 days as labels for the chart
    const labels = getPastDates(10);

    // Prepare the data for the chart
    const data = labels.map(date => goalCounts[date] || 0);
    
    // Render the chart using Chart.js
    var ctx = document.getElementById('goalChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Number of Goals Completed Each Day',
                data: data,
                backgroundColor: 'lightblue',
                borderColor: 'black',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Date',
                        color: 'black'
                    },
                    ticks: {
                        color: 'black'
                    }
                },
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Number of Goals',
                        color: 'black'
                    },
                    ticks: {
                        color: 'black'
                    },
                    grid: {
                        color: 'black'
                    }
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'top',
                    labels: {
                        color: 'black' // Text color for legend labels
                    }
                }
            },
            layout: {
                padding: {
                    left: 10,
                    right: 10,
                    top: 10,
                    bottom: 10
                }
            },
            responsive: true // Enable responsiveness
        }
    });
    */

    function getPastDates(n) {
    const dates = [];
    for (let i = n - 1; i >= 0; i--) {
        const date = new Date();
        date.setDate(date.getDate() - i);
        dates.push(date.toLocaleDateString('en-US'));
    }
    return dates;
}

// Assuming you have retrieved all goals for the past 30 days
let allGoals = [];
{{#each allGoals}}
    allGoals.push({
        date: '{{this.date}}',
        completed: {{this.completed}}
    });
{{/each}}

// Organize the data to count the number of goals and completed goals for each day
const goalCounts = {};
const completedGoalCounts = {};
allGoals.forEach(goal => {
    const date = new Date(goal.date).toLocaleDateString('en-US');
    goalCounts[date] = (goalCounts[date] || 0) + 1;
    if (goal.completed) {
        completedGoalCounts[date] = (completedGoalCounts[date] || 0) + 1;
    }
});

// Get the past 30 days as labels for the chart
const labels = getPastDates(10);

// Prepare the data for the chart
const data = labels.map(date => {
    const totalGoals = goalCounts[date] || 0;
    const completedGoals = completedGoalCounts[date] || 0;
    return totalGoals !== 0 ? (completedGoals / totalGoals * 100).toFixed(2) : 0;
});

// Render the chart using Chart.js
var ctx = document.getElementById('goalChart').getContext('2d');
var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: labels,
        datasets: [{
            label: 'Percentage of Goals Completed Each Day',
            data: data,
            backgroundColor: 'lightblue',
            borderColor: 'black',
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            x: {
                title: {
                    display: true,
                    text: 'Date',
                    color: 'black'
                },
                ticks: {
                    color: 'black'
                }
            },
            y: {
                beginAtZero: true,
                title: {
                    display: true,
                    text: 'Percentage of Goals Completed',
                    color: 'black'
                },
                ticks: {
                    color: 'black'
                },
                grid: {
                    color: 'black'
                }
            }
        },
        plugins: {
            legend: {
                display: true,
                position: 'top',
                labels: {
                    color: 'black' // Text color for legend labels
                }
            }
        },
        layout: {
            padding: {
                left: 10,
                right: 10,
                top: 10,
                bottom: 10
            }
        },
        responsive: true // Enable responsiveness
    }
});

});

</script>
</body>


